<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.rhq</groupId>
        <artifactId>rhq-parent</artifactId>
        <version>4.6.0-SNAPSHOT</version>
        <relativePath>../../../../pom.xml</relativePath>
    </parent>

    <groupId>org.rhq</groupId>
    <artifactId>rhq-installer</artifactId>
    <packaging>war</packaging>

    <name>RHQ Enterprise GWT Installer GUI</name>
    <description>The RHQ Enterprise GWT Installer GUI webapp</description>

    <properties>
        <!-- dependency versions -->
        <gwt.version>2.4.0</gwt.version>
        <smartgwt.version>3.0</smartgwt.version>

        <installerGuiParams />
        <installerGuiRunTarget>'http://localhost:7080/rhq-installer/index.html${installerGuiParams}'</installerGuiRunTarget>

        <!-- If this is too much memory to allocate to your gwt:debug process then
            override this property in in your settings.xml -->
        <gwt-plugin.extraJvmArgs>-Xms512M -Xmx512M -XX:PermSize=128M -XX:MaxPermSize=256M</gwt-plugin.extraJvmArgs>
        <gwt-plugin.localWorkers>4</gwt-plugin.localWorkers>

        <gwt.userAgent>ie8,ie9,gecko1_8,safari,opera</gwt.userAgent>
        <gwt.draftCompile>false</gwt.draftCompile>
        <gwt.soyc>false</gwt.soyc>
        <gwt.style>PRETTY</gwt.style>
        <!-- <gwt.locale>en,de,ja,pt,zh,ru,cs</gwt.locale> -->
        <gwt.locale>en</gwt.locale>
        <gwt.fallback.locale>en</gwt.fallback.locale>

        <enable-tags>true</enable-tags>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- JBoss distributes a complete set of Java EE 6 APIs. We use this here 
                so that we always get the correct versions of artifacts.
				TODO: We should probably move this up to the root pom. -->
            <dependency>
                <groupId>org.jboss.spec</groupId>
                <artifactId>jboss-javaee-6.0</artifactId>
                <version>3.0.0.Final</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.rhq</groupId>
            <artifactId>rhq-core-util</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.rhq</groupId>
            <artifactId>rhq-core-dbutils</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <!-- need this solely for SecurityUtils -->
            <groupId>org.rhq</groupId>
            <artifactId>rhq-enterprise-comm</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.rhq</groupId>
            <artifactId>rhq-jboss-as-dmr-client</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- dbutils has transitive dep on ant-launcher but with test scope - installer needs it for real -->
        <dependency>
            <groupId>ant</groupId>
            <artifactId>ant-launcher</artifactId>
            <version>1.6.5</version>
        </dependency>

        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
            <version>${gwt.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwt.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- This is so we can compile custom GWT Generators to be called during
            gwt compilation. Is is not needed at runtime and so is not included in the
            WAR. -->
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-dev</artifactId>
            <version>${gwt.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.smartgwt</groupId>
            <artifactId>smartgwt</artifactId>
            <version>${smartgwt.version}</version>
        </dependency>

        <!-- Import the Servlet API -->
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.0_spec</artifactId>
            <scope>provided</scope> <!-- provided by AS7 -->
        </dependency>


        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-server</artifactId>
            <version>${jboss.version}</version>
            <scope>provided</scope> <!-- provided by AS7 -->
        </dependency>

        <!-- test deps -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.9.0</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>rhq-installer</finalName>

        <resources>
            <resource>
                <targetPath>${project.build.directory}/generated-sources/gwt</targetPath>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.gwt.xml</include>
                    <include>**/*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.java</include>
                </includes>
            </resource>
        </resources>

        <plugins>

          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemPropertyVariables>
                <rhq.test.ds.type-mapping>${rhq.test.ds.type-mapping}</rhq.test.ds.type-mapping>
                <rhq.test.ds.server-name>${rhq.test.ds.server-name}</rhq.test.ds.server-name>
                <rhq.test.ds.db-name>${rhq.test.ds.db-name}</rhq.test.ds.db-name>
                <rhq.test.ds.connection-url>${rhq.test.ds.connection-url}</rhq.test.ds.connection-url>
                <rhq.db.admin.username>${rhq.db.admin.username}</rhq.db.admin.username>
                <rhq.db.admin.password>${rhq.db.admin.password}</rhq.db.admin.password>
                <rhq.test.ds.user-name>${rhq.test.ds.user-name}</rhq.test.ds.user-name>
                <rhq.test.ds.password>${rhq.test.ds.password}</rhq.test.ds.password>
              </systemPropertyVariables>
            </configuration>
          </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <version>2.4.0</version>
                <configuration>
                    <noServer>true</noServer>
                    <inplace>false</inplace>
                    <logLevel>INFO</logLevel>
                    <runTarget>${installerGuiRunTarget}</runTarget>
                    <extraJvmArgs>${gwt-plugin.extraJvmArgs}</extraJvmArgs>
                    <localWorkers>${gwt-plugin.localWorkers}</localWorkers>
                    <draftCompile>${gwt.draftCompile}</draftCompile>
                    <soyc>${gwt.soyc}</soyc>
                    <buildOutputDirectory>target/gwtclasses</buildOutputDirectory>
                    <hostedWebapp>target/hostedWar</hostedWebapp>
                    <debugSuspend>false</debugSuspend>
                    <servicePattern>**/gwt/*GWTService.java</servicePattern>
                    <i18nMessagesBundle>org.rhq.enterprise.gui.installer.client.Messages</i18nMessagesBundle>
                    <i18nConstantsWithLookupBundle>org.rhq.enterprise.gui.installer.client.ServerPropertiesMessages</i18nConstantsWithLookupBundle>
                    <style>${gwt.style}</style>
                    <strict>true</strict>
                    <!-- compiles gwt artifacts like symbolMap outside of war so it doesnt
                        get packaged -->
                    <deploy>${project.build.directory}/gwt-deploy</deploy>
                </configuration>

                <executions>
                    <execution>
                        <id>gwt-goals</id>
                        <goals>
                            <goal>compile</goal>
                            <goal>generateAsync</goal>
                            <goal>i18n</goal>
                        </goals>
                    </execution>
                    <execution>
                        <!-- This id is what does the trick, don't change it. For this to work
                            maven 2.2.0 and later is needed. -->
                        <id>default-cli</id>
                        <goals>
                            <goal>debug</goal>
                        </goals>
                        <configuration>
                            <module>org.rhq.enterprise.gui.installer.Installer</module>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Build-Number>${buildNumber}</Build-Number>
                            <Dependencies>org.jboss.msc,org.jboss.as.controller-client,org.jboss.as.controller,org.jboss.as.server</Dependencies>
                        </manifestEntries>
                    </archive>
                    <webResources>
                        <resource>
                            <filtering>false</filtering>
                            <directory>${basedir}/src/main/webapp</directory>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-gwt-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${basedir}/target/generated-sources/gwt</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>

    <profiles>
        <profile>
            <id>dev</id>

            <properties>
                <rhq.rootDir>../../../..</rhq.rootDir>
                <rhq.containerDir>${rhq.rootDir}/${rhq.defaultDevContainerPath}</rhq.containerDir>
                <rhq.deploymentName>${project.build.finalName}.war</rhq.deploymentName>
                <rhq.deploymentDir>${rhq.containerDir}/jbossas/standalone/deployments/${rhq.deploymentName}</rhq.deploymentDir>
            </properties>

            <build>
                <plugins>

                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>

                            <execution>
                                <id>deploy</id>
                                <phase>package</phase>
                                <configuration>
                                    <target>
                                        <property name="deployment.dir" location="${rhq.deploymentDir}" />
                                        <echo>*** Copying updated files from target${file.separator}${project.build.finalName}${file.separator} to ${deployment.dir}${file.separator}...</echo>
                                        <copy todir="${deployment.dir}" verbose="${rhq.verbose}">
                                            <fileset dir="${basedir}/target/${project.build.finalName}" />
                                        </copy>
                                        <echo>*** Copying MANIFEST.MF from target${file.separator}${project.build.finalName}.war to ${deployment.dir}${file.separator}META-INF...</echo>
                                        <unwar src="${basedir}/target/${project.build.finalName}.war"
                                               dest="${deployment.dir}">
                                            <patternset>
                                                <include name="META-INF/MANIFEST.MF" />
                                            </patternset>
                                        </unwar>
                                        <delete file="${deployment.dir}/../${rhq.deploymentName}.failed" /> <!-- in case we previously failed -->
                                        <!-- TODO: do we want to deploy the installer even if dev mode? -->
                                        <touch file="${deployment.dir}/../${rhq.deploymentName}.dodeploy" />
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>undeploy</id>
                                <phase>clean</phase>
                                <configuration>
                                    <target>
                                        <property name="deployment.dir" location="${rhq.deploymentDir}" />
                                        <echo>*** Deleting ${deployment.dir}${file.separator}...</echo>
                                        <delete dir="${deployment.dir}" />
                                        <delete file="${deployment.dir}/../${rhq.deploymentName}.failed" /> <!-- in case we previously failed -->
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>

                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>

        <!-- Change the installerGuiRunTarget to not have single quotes. The quotes
            work for linux but not win -->
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <properties>
                <installerGuiRunTarget>http://localhost:7080//rhq-installer/index.html${installerGuiParams}</installerGuiRunTarget>
            </properties>
        </profile>

        <profile>
            <id>msg</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <includes>
                                <include>org/rhq/enterprise/gui/installer/client/*Messages.java</include>
                            </includes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>disable-tags</id>
            <activation>
                <property>
                    <name>brew</name>
                </property>
            </activation>
            <properties>
                <enable.tags>false</enable.tags>
            </properties>
        </profile>

    </profiles>


    <repositories>
        <repository>
            <id>smartgwt</id>
            <name>SmartGWT Releases</name>
            <url>http://www.smartclient.com/maven2/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>codehaus</id>
            <name>Codehaus Releases</name>
            <url>http://repository.codehaus.org/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

    </repositories>

</project>
