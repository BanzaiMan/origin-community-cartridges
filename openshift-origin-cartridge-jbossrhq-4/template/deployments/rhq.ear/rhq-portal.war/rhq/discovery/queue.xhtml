<?xml version="1.0"?>

<!DOCTYPE html
      PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
      "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:c="http://java.sun.com/jstl/core"
      xmlns:onc="http://jboss.org/on/component"
      xmlns:onf="http://jboss.org/on/function"
      xmlns:rich="http://richfaces.ajax4jsf.org/rich">

<ui:composition template="/rhq/layout/main.xhtml">

   <ui:param name="pageTitle" value="Auto Discovery Queue"/>

   <ui:define name="breadcrumbs">
      <h:outputLink value="/Dashboard.do">
         ${msg["dash.home.PageTitle"]}
      </h:outputLink>
      &gt;
      <h:outputLink value="/rhq/discovery/queue.xhtml">
         ${msg["autodiscovery.breadcrumb"]}
      </h:outputLink>
   </ui:define>

   <ui:define name="body">
   

      <script language="JavaScript" type="text/javascript">
      //<![CDATA[
         // checks all the boxes
         function checkAll( checkbox )
         {
            var all_elements = document.getElementsByTagName('input');
            for (var i=0; i < all_elements.length; i++)
            {
               // click all the platforms which will in turn click all the servers
               if (all_elements[i].name.indexOf('checkbox_platform') > -1)
                  if ( all_elements[i].checked != checkbox.checked )
                     all_elements[i].click();
                  else
                  {
                     all_elements[i].click();
                     all_elements[i].click();
                  }
            }
         }

         // if the platform checkbox is (un)checked, all of its servers are automatically (un)checked
         function checkPlatform( checkbox, platformId )
         {
            var found_platform = false;
            var all_elements = document.getElementsByTagName('input');
            for (var i=0; i < all_elements.length; i++)
            {
               if (found_platform)
               {
                  if (all_elements[i].name.indexOf('checkbox_server') > -1)
                  {
                     if (all_elements[i].checked != checkbox.checked )
                        all_elements[i].click();
                  }
                  else if (all_elements[i].name.indexOf('checkbox_platform') > -1)
                     break; // we have moved on to the next platform, we can stop now
               }
               else
               {
                  if (all_elements[i] == checkbox)
                     found_platform = true; // we found the platform - servers after this one belong to it
               }
            }
         }

         function checkServer( checkbox, platformId, serverId )
         {
            // if user selected a server, the platform will be selected automatically
            if (checkbox.checked)
            {
               var platform;
               var all_elements = document.getElementsByTagName('input');
               for (var i=0; i < all_elements.length; i++)
               {
                  if (all_elements[i].name.indexOf('checkbox_platform') > -1)
                     platform = all_elements[i];
                  else if (all_elements[i] == checkbox)
                  {
                     if ( !platform.checked )
                        platform.checked = true;
                     break;
                  }
               }
            }
         }
      //]]>
      </script>

      <br/>
      <h:messages showSummary="true"
                  showDetail="true"
                  infoClass="InfoBlock"
                  warnClass="WarnBlock"
                  errorClass="ErrorBlock"
                  fatalClass="FatalBlock"
                  globalOnly="true"
                  layout="table"
                  width="100%"/>

      <h:form id="queueForm">

         <rich:panel>
            <f:facet name="header">Auto Discovery Queue</f:facet>

            <h:panelGrid columns="2" width="1%" cellspacing="3">
               <h:outputText value="Show:" />
               <h:selectOneListbox id="newOrIgnored"
                                   size="1"
                                   onchange="document.getElementById('queueForm:hiddenQueueButton').click();"
                                   value="#{AutoDiscoverySessionUIBean.showNewIgnore}">
                  <f:selectItem itemValue="NEW" itemLabel="New Only" />
                  <f:selectItem itemValue="IGNORED" itemLabel="Ignored Only" />
                  <f:selectItem itemValue="BOTH" itemLabel="Both New and Ignored" />
               </h:selectOneListbox>
            </h:panelGrid>

               <ui:param name="autoDiscoveryQueueDataModel" value="#{AutoDiscoveryQueueUIBean.dataModel}"/>
               <rich:dataTable id="autoDiscoveryQueueDataTable"
                               rows="#{PageControl.AutoDiscoveryPlatformList.pageSize}"
                               value="#{autoDiscoveryQueueDataModel}"
                               var="platformQueueItem"
                               width="100%"
                               columnsWidth="5%, 20%, 20%, 20%, 20%, 15%"
                               headerClass="tableRowHeader"
                               footerClass="on-pager-footer"
                               onRowMouseOver="this.style.backgroundColor='#E7E7E7'"
                               onRowMouseOut="this.style.backgroundColor='#{a4jSkin.tableBackgroundColor}'">

                  <f:facet name="PageControlView">
                     <onc:paginationControl id="AutoDiscoveryPlatformList" />
                  </f:facet>

                  <rich:column>
                     <f:facet name="header">
                        <h:panelGrid id="panel" columns="5">
                              <h:selectBooleanCheckbox id="select-all-checkbox" onclick="checkAll(this)">
                                 <rich:toolTip value="Select All Platforms (Selects All Servers In Expanded Platforms Only)"/>
                              </h:selectBooleanCheckbox>
                              <rich:spacer width="3" height="1" />
                              <h:commandLink action="#{AutoDiscoverySessionUIBean.collapseAll}">
                                 <h:graphicImage id="collapse-all-image" value="/images/minus.gif" height="12" width="12" title="Collapse All">
                                    <rich:toolTip value="Collapse All"/>
                                 </h:graphicImage>
                              </h:commandLink>
                              <rich:spacer width="3" height="1" />
                              <h:commandLink action="#{AutoDiscoverySessionUIBean.expandAll}">
                                 <h:graphicImage id="expand-all-image" value="/images/plus.gif" height="12" width="12" title="Expand All">
                                    <rich:toolTip value="Expand All"/>
                                 </h:graphicImage>
                              </h:commandLink>
                        </h:panelGrid>
                     </f:facet>

                     <h:commandLink action="#{AutoDiscoverySessionUIBean.collapse}"
                                    rendered="#{AutoDiscoverySessionUIBean.expandedMap[platformQueueItem.original.id]}">
                        <f:param name="platformId" value="#{platformQueueItem.original.id}"/>
                        <h:graphicImage value="/images/minus.gif" />
                     </h:commandLink>
                     <h:commandLink action="#{AutoDiscoverySessionUIBean.expand}"
                                    rendered="#{!AutoDiscoverySessionUIBean.expandedMap[platformQueueItem.original.id]}">
                        <f:param name="platformId" value="#{platformQueueItem.original.id}"/>
                        <h:graphicImage value="/images/plus.gif" />
                     </h:commandLink>
                     <h:selectBooleanCheckbox id="checkbox_platform"
                                              value="#{AutoDiscoverySessionUIBean.selectedResources[platformQueueItem.original.id]}"
                                              onclick="checkPlatform(this, #{platformQueueItem.original.id})" />
                     <input type="hidden"
                            name="platform_servers_#{platformQueueItem.original.id}"
                            id="platform_servers_#{platformQueueItem.original.id}"
                            value="-1" />
                  </rich:column>

                  <rich:column rendered="#{param.debug}">
                     <f:facet name="header">
                        <onc:sortableColumnHeader sort="res.id">
                           <h:outputText styleClass="headerText" value="ID" />
                        </onc:sortableColumnHeader>
                     </f:facet>
                     <h:outputText value="#{platformQueueItem.original.id}"/>
                  </rich:column>

                  <rich:column>
                     <f:facet name="header">
                        <onc:sortableColumnHeader sort="res.name">
                           <h:outputText styleClass="headerText" value="Resource" />
                        </onc:sortableColumnHeader>
                     </f:facet>
                     
                     <onc:disambiguatedResourceName resourceName="#{platformQueueItem.original.name}" 
                      resourceId="#{platformQueueItem.original.id}" disambiguationReport="#{platformQueueItem}" nameAsLink="false" />
                  </rich:column>

                  <rich:column>
                     <f:facet name="header">
                        <h:outputText styleClass="headerText" value="Key" />
                     </f:facet>
                     <h:outputText value="#{platformQueueItem.original.resourceKey}" />
                  </rich:column>

                  <rich:column>
                     <f:facet name="header">
                        <h:outputText styleClass="headerText" value="Description" />
                     </f:facet>
                     <h:outputText value="#{platformQueueItem.original.description}"/>
                  </rich:column>

                  <rich:column>
                     <f:facet name="header">
                        <onc:sortableColumnHeader sort="res.ctime">
                           <h:outputText styleClass="headerText" value="Date Detected" />
                        </onc:sortableColumnHeader>
                     </f:facet>
                     <h:outputText value="#{platformQueueItem.original.ctime}">
                        <f:converter converterId="UserDateTimeConverter" />
                     </h:outputText>
                  </rich:column>

                  <rich:column>
                     <f:facet name="header">
                        <onc:sortableColumnHeader sort="res.inventoryStatus">
                           <h:outputText styleClass="headerText" value="Status" />
                        </onc:sortableColumnHeader>
                     </f:facet>
                     <h:outputText value="#{platformQueueItem.original.inventoryStatus}"/>
                  </rich:column>

                  <rich:subTable value="#{AutoDiscoveryQueueUIBean.platformsAndServers[platformQueueItem]}"
                                 var="serverQueueItem"
                                 rowClasses="ListRow"
                                 width="100%"
                                 columnsWidth="1%"
                                 rendered="#{AutoDiscoverySessionUIBean.expandedMap[platformQueueItem.original.id]}">
                     <rich:column>
                        <h:selectBooleanCheckbox id="checkbox_server"
                                                 onclick="checkServer(this, #{platformQueueItem.original.id}, #{serverQueueItem.original.id})"
                                                 value="#{AutoDiscoverySessionUIBean.selectedResources[serverQueueItem.original.id]}"
                                                 style="float:right;" />
                     </rich:column>

                     <rich:column rendered="#{param.debug}">
                        <h:outputText value="#{serverQueueItem.original.id}"/>
                     </rich:column>

                     <rich:column>
                     <onc:disambiguatedResourceName resourceName="#{serverQueueItem.original.name}" 
                      resourceId="#{serverQueueItem.original.id}" disambiguationReport="#{serverQueueItem}" nameAsLink="false" />
                     </rich:column>

                     <rich:column>
                        <h:outputText value="#{serverQueueItem.original.resourceKey}" />
                     </rich:column>

                     <rich:column>
                        <h:outputText value="#{serverQueueItem.original.description}" />
                     </rich:column>

                     <rich:column>
                        <h:outputText value="#{serverQueueItem.original.ctime}">
                           <f:converter converterId="UserDateTimeConverter" />
                        </h:outputText>
                     </rich:column>

                     <rich:column>
                        <h:outputText value="#{serverQueueItem.original.inventoryStatus}" />
                     </rich:column>
                  </rich:subTable>

                  <f:facet name="footer">
                     <rich:columnGroup>
                        <rich:column colspan="6" width="100%">
                           <h:commandButton action="#{AutoDiscoveryQueueUIBean.importResources}"
                                            value="IMPORT" styleClass="on-pager-button buttonsmall"/>
                           <h:commandButton action="#{AutoDiscoveryQueueUIBean.unignoreResources}"
                                            value="UN-IGNORE" styleClass="on-pager-button buttonsmall"/>
                           <h:commandButton action="#{AutoDiscoveryQueueUIBean.ignoreResources}"
                                            value="IGNORE" styleClass="on-pager-button buttonsmall"/>

                           <ui:param name="paginationDataTableName" value="autoDiscoveryQueueDataTable"/>
                           <ui:param name="paginationDataModel" value="#{autoDiscoveryQueueDataModel}"/>
                           <ui:param name="paginationPageControl" value="#{PageControl.AutoDiscoveryPlatformList}"/>
                           <ui:param name="paginationUIBean" value="#{AutoDiscoveryQueueUIBean}" />
                           <ui:include src="../resource/include/pagination.xhtml"/>
                        </rich:column>
                     </rich:columnGroup>
                  </f:facet>

               </rich:dataTable>

            <!-- use a hidden button trick (which sends the same action a column click would) so request params aren't lost -->
            <h:commandButton id="hiddenQueueButton" style="visibility: hidden;" action="#{AutoDiscoveryQueueUIBean.rebuildTable}" />

         </rich:panel>
      </h:form>

   </ui:define>

</ui:composition>

</html>
