# taken from net.sf.navigator.displayer.DisplayerStrings.properties

# these js properties weren't even used in the original ListMenuDisplayer
#lmd.js.start=\n<script type="text/javascript">\n<!--\n\twindow.onload = function() {\n
#lmd.js=\t\tinitializeMenu("{0}", "{1}");\n
#lmd.js.expand=\t\texpandMenus();\n
#lmd.js.stop=\t}\n//-->\n</script>

# updated div id here and in menuExpandable.js to match the new css, got rid of ul also
lmd.begin=<div id="LeftMenu">\n
lmd.end=</div>
# got rid of li to fit in with new leftMenu.css
lmd.menu.top=\n
lmd.menu.bottom=\n

# take out the actuator since it screws up the leftMenu.css
#lmd.menu.actuator.link=\t<a href="#" id="{0}Actuator" class="actuator">&nbsp;</a><a href="{3}" title="{1}" class="base">{1}</a>\n\t\t<ul id="{0}Menu" class="{2}">\n
lmd.menu.actuator.link=\t<a href="{3}" title="{1}" class="base">{1}</a>\n\t\t<ul id="{0}Menu" class="{2}">\n

# for our purposes the only "menu" which won't have a link will be the top level container-type,
# which we don't actually want an actuator for and needs its own style
#lmd.menu.actuator.top=\t<a href="#" id="{0}Actuator" class="actuator">{1}</a>\n\t\t<ul id="{0}Menu" class="{2}">\n
lmd.menu.actuator.top=\t\t<ul id="{0}Menu" style="display: block;" class="{2}">\n

lmd.menu.actuator.bottom=\t\t</ul>\n\t</li>\n
lmd.menu.item=\t<li><a href="{0}" title="{1}"{2}>{3}</a></li>
lmd.menu.standalone=\t<a href="{0}" title="{1}" class="standalone"{2}>{3}</a>
